import { expect } from "chai";
import { ethers } from "hardhat";
import { encodeV2SwapParams } from "./Router";

const abiCoder = ethers.AbiCoder.defaultAbiCoder();

describe("Router", () => {
  it("should correctly encode swap params", () => {
    const encodedSwapParams = encodeV2SwapParams({
      from: "0x93798Ef7e3A621d7C4EfF22eDA50B931fE57a3cF",
      amount: 10000000000n,
      minOut: 9968009189n,
      routes: [
        {
          fromTokenAddress: "0xdce97DAd5335AeCbFA7410eE87cea9f6411a632f",
          toTokenAddress: "0x4200000000000000000000000000000000000006",
          stable: false,
        },
      ],
      payerIsUser: true,
    });

    const knownEncodedParams =
      "0x00000000000000000000000093798ef7e3a621d7c4eff22eda50b931fe57a3cf00000000000000000000000000000000000000000000000000000002540be400000000000000000000000000000000000000000000000000000000025223bfe500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000dce97dad5335aecbfa7410ee87cea9f6411a632f00000000000000000000000042000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000";

    expect(encodedSwapParams).to.equal(knownEncodedParams);
  });
});
